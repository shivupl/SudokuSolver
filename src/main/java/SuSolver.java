
import java.awt.Font;
import java.awt.GridLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author home
 */
public class SuSolver extends javax.swing.JFrame
{
    private static int[][] grid = new int[9][9];

    
    
    DefaultListModel mod = new DefaultListModel();

    
    public static boolean solve() 
    {
        for (int k = 0; k < grid.length; k++) 
        {
            for (int i = 0; i < grid.length; i++) 
            {
                if (grid[k][i] == 0)
                {
                    int temp = 1;
                    while(temp <= 9)
                    {
                        if (check(temp, k ,i) == true) 
                        {
                            grid[k][i] = temp;

                            if (solve() == true)
                            { 
                                return true;
                            } 
                            else
                            { 
                                grid[k][i] = 0;
                            }
                        }
                        temp++;
                    }

                    return false; 
                }
            }
        }
        return true;
    }

    
    public static boolean check(int num, int x, int y)
    {
        //checking row
        for(int k = 0; k < grid.length; k++)
        {
            if(grid[x][k] == num)
            {
                return false;
            }
        }
        
        //checking col
        for(int i = 0; i < grid.length; i++)
        {
            if(grid[i][y] == num)
            {
                return false;
            }
        }
        
        //checking box
        for(int p = 0; p < 3; p++)
        {
            for(int j = 0; j < 3; j++)
            {
                if(grid[p+((x/3)*3)][j+((y/3)*3)] == num)
                {
                    return false;
                }
            }
        }

        return true;
    }

    public static void print()
    {
        System.out.println("");
        for(int k = 0; k < grid.length; k++)
        {
            for(int i = 0; i < grid.length; i++)
            {
                System.out.print(grid[k][i] + " ");
            }
            System.out.println("");
        }
    }
    
    public void fill(String n) throws FileNotFoundException
    {
        File f = new File(n);
        Scanner sc = new Scanner(f);
        String s = "";
        int temp = 0;
        while(sc.hasNext())
        {
            s+= sc.next();
        }
        System.out.println(s);
        if(s.length() == 81)
        {
            for(int k = 0; k < grid.length; k++)
            {
                for(int i = 0; i < grid.length; i++)
                {
                    String p = s.substring(temp,temp+1);
                    grid[k][i] = Integer.parseInt(p);
                    temp++;
                }
            }
            mod.addElement("Puzzle successfully imputed");

        }
        else
            mod.addElement("Puzzle is Incompatible");
        print();
    }
    

    
    /**
     * Creates new form SuSolver
     */
    public SuSolver() 
    {
        initComponents();
        lst.setModel(mod);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        lblTite = new javax.swing.JLabel();
        btnQuit = new javax.swing.JButton();
        btnInput = new javax.swing.JButton();
        btnFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst = new javax.swing.JList<>();
        btnSolve = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTite.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblTite.setText("Sudoku Solver");
        lblTite.setSize(new java.awt.Dimension(55, 26));

        btnQuit.setText("Quit");
        btnQuit.setToolTipText("");
        btnQuit.setActionCommand("Quit");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        btnInput.setText("Maunal Imput");
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });

        btnFile.setText("Choose File");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        lst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lst);

        btnSolve.setText("Solve");
        btnSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnInput)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnFile)
                                .addComponent(lblTite))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnSolve)))
                .addContainerGap(95, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnQuit)
                .addGap(161, 161, 161))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblTite)
                        .addGap(27, 27, 27)
                        .addComponent(btnFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInput)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSolve)
                        .addGap(108, 108, 108)))
                .addComponent(btnQuit)
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnQuitActionPerformed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        // TODO add your handling code here:
        int count = 1;
        for(int k = 0; k < grid.length; k++)
        {
            for(int i = 0; i < grid.length; i++)
            {
                String temp = JOptionPane.showInputDialog("Enter Value for box: " + count);
                grid[k][i] = Integer.parseInt(temp);
            }
        }
    }//GEN-LAST:event_btnInputActionPerformed

    private void btnSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolveActionPerformed
        // TODO add your handling code here:
        if(solve() == true)
        {
            mod.addElement("Puzzle Solved");
            JFrame f = new JFrame();
            f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            f.setSize(600,600);
            f.setLayout(new GridLayout(9,9));
            for(int k = 0; k < grid.length; k++)
            {
                for(int i = 0; i < grid.length; i++)
                {
                    Integer temp = grid[k][i];
                    String t = temp.toString();
                    JButton e = new JButton(t);
                    e.setFont(new Font("Arial", Font.PLAIN, 40));
                    f.add(e);
                    
                }
            }
            f.setVisible(true);
        }
        else
        {
            mod.addElement("Puzzle can't be solved");
        }

    }//GEN-LAST:event_btnSolveActionPerformed

    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        // TODO add your handling code here:
        String fileName = JOptionPane.showInputDialog("Enter File Name:");
        try {
            fill(fileName);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SuSolver.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuSolver().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFile;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnSolve;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblTite;
    private javax.swing.JList<String> lst;
    // End of variables declaration//GEN-END:variables
}
